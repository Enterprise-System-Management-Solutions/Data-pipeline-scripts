--
-- P_L1_TO_L2_TRANSFER  (Procedure) 
--
CREATE OR REPLACE PROCEDURE DWH_USER.P_L1_TO_L2_TRANSFER (P_PROCESS_DATE VARCHAR2) IS
    VCOUNT NUMBER;
    VDATE_KEY NUMBER;
    VSTATUS NUMBER;
    VDATE DATE := TO_DATE(TO_DATE(P_PROCESS_DATE,'YYYYMMDD'),'DD/MM/RRRR');
BEGIN
    SELECT COUNT(*) INTO VCOUNT 
    FROM CDR_HEAD_MERGE
    WHERE SOURCE = 'transfer'
    AND PROCESS_STATUS = 96
    AND TO_DATE(PROCESS_DATE,'DD/MM/RRRR') = VDATE;
    
    SELECT DATE_KEY INTO VDATE_KEY FROM DATE_DIM
    WHERE DATE_KEY = (SELECT A.DATE_KEY FROM DATE_DIM A WHERE A.DATE_VALUE = VDATE);
    
  IF VCOUNT >= 1  THEN
      INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
    VALUES              ('L1_TRANSFER',VDATE_KEY,'transfer','96',VCOUNT,'','',SYSDATE); 
        
    SELECT STATUS INTO VSTATUS
    FROM ETL_LOG
    WHERE DATE_KEY = (SELECT A.DATE_KEY FROM DATE_DIM A WHERE A.DATE_VALUE = VDATE-1)
    AND LAYER = 'L2_TRANSFER'
    AND SOURCE = 'transfer';    
    
    IF VSTATUS = 96 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L2_TRANSFER',VDATE_KEY,'transfer','30',VCOUNT,'','',SYSDATE);
        COMMIT;
        INSERT INTO L2_TRANSFER
        SELECT /*+ PARALLEL(T,8) */
        C.DATE_KEY AS ETL_DATE_KEY, 
        T.FILE_NAME, 
        T4_CUST_ID, 
        T6_PRI_IDENTITY, 
        T9_REASON_CODE, 
        T10_RESULT_CODE, 
        T11_ERROR_TYPE, 
        T15_TRANSFER_TYPE, 
        NVL(T16_TRANSFER_AMT,0) / 1000000 AS  T16_TRANSFER_AMT,
        B.DATE_KEY AS T17_TRANSFER_DATE_KEY, 
        TO_CHAR(TO_DATE( SUBSTR(T17_TRANSFER_DATE,9,4), 'HH24MI')+360/1440, 'HH24MI') AS  T17_TRANSFER_DATE_HOUR,--SUBSTR(T17_TRANSFER_DATE,9,4) AS T17_TRANSFER_DATE_HOUR, 
        T18_TRANSFER_TRANS_ID, 
        T22_DIAMETER_SESSIONID, 
        T24_REVERSAL_TRANS_ID, 
        T25_REVERSAL_REASON_CODE, 
        T28_STATUS, 
        E.DATE_KEY AS T29_ENTRY_DATE_KEY, 
        TO_CHAR(TO_DATE( SUBSTR(T29_ENTRY_DATE,9,4), 'HH24MI')+360/1440, 'HH24MI') AS  T29_ENTRY_DATE_HOUR,--SUBSTR(T29_ENTRY_DATE,9,4) AS T29_ENTRY_DATE_HOUR, 
        T39_BALANCE_TYPE, 
        NVL(T40_CUR_BALANCE,0) / 1000000 AS T40_CUR_BALANCE,
        NVL(T41_CHG_BALANCE,0) / 1000000 AS T41_CHG_BALANCE,
        T46_OPER_TYPE, 
        T458_MAINOFFERINGID, 
        T459_PAYTYPE, 
        '880'||T477_OTHERNUMBER, 
        NVL(T480_PREPAID_BALANCE,0) / 1000000 AS  T480_PREPAID_BALANCE,
        NVL(T481_POSTPAID_BALANCE,0) / 1000000 AS T481_POSTPAID_BALANCE,
        T489_CHARGE_OF_FUND
        FROM  L1_TRANSFER T,DATE_DIM B,DATE_DIM C,DATE_DIM E
        WHERE TO_CHAR(B.DATE_VALUE,'YYYYMMDD')=TO_CHAR(TO_DATE( SUBSTR(T.T17_TRANSFER_DATE,1,12), 'YYYYMMDDHH24MI')+6/24, 'YYYYMMDD')--WHERE TO_DATE(E.DATE_VALUE,'DD/MM/YYYY')=TO_DATE(TO_DATE( SUBSTR(T.T29_ENTRY_DATE,1,8), 'YYYYMMDD'), 'DD/MM/YYYY')
        AND TO_CHAR(E.DATE_VALUE,'YYYYMMDD')=TO_CHAR(TO_DATE( SUBSTR(T.T29_ENTRY_DATE,1,12), 'YYYYMMDDHH24MI')+6/24, 'YYYYMMDD')
        AND TO_DATE(C.DATE_VALUE,'DD/MM/YYYY')=TO_DATE(T.PROCESSED_DATE, 'DD/MM/YYYY')
        AND TO_DATE(T.PROCESSED_DATE,'DD/MM/RRRR') = VDATE;
        COMMIT;
        
    UPDATE ETL_LOG SET STATUS = 96,
    UPDATE_TIME=SYSDATE 
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L2_TRANSFER';        
    COMMIT;
    END IF;
        
    ELSE
        
    INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
    VALUES              ('L2_TRANSFER',VDATE_KEY,'transfer','34',VCOUNT,'','',SYSDATE);
    
    COMMIT;
  END IF;
EXCEPTION
 WHEN OTHERS THEN NULL;
END;
/

