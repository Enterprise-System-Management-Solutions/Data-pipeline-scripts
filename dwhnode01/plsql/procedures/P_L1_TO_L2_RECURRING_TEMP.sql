--
-- P_L1_TO_L2_RECURRING_TEMP  (Procedure) 
--
CREATE OR REPLACE PROCEDURE DWH_USER.P_L1_TO_L2_RECURRING_TEMP (P_PROCESS_DATE VARCHAR2) IS
    VCOUNT NUMBER;
    VDATE_KEY NUMBER;
    VSTATUS NUMBER;
    VSTATUS2 NUMBER;
    VDATE DATE := TO_DATE(TO_DATE(P_PROCESS_DATE,'YYYYMMDD'),'DD/MM/RRRR');
BEGIN
    SELECT COUNT(*) INTO VCOUNT 
    FROM CDR_HEAD_MERGE
    WHERE SOURCE = 'mon'
    AND PROCESS_STATUS = 96
    AND TO_DATE(PROCESS_DATE,'DD/MM/RRRR') = VDATE;
    
    SELECT DATE_KEY INTO VDATE_KEY FROM DATE_DIM
    WHERE DATE_KEY = (SELECT A.DATE_KEY FROM DATE_DIM A WHERE A.DATE_VALUE = VDATE);
    
  IF VCOUNT >= 1  THEN
    INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
    VALUES              ('L1_RECURRING',VDATE_KEY,'mon','96',VCOUNT,'','',SYSDATE);
    COMMIT;
        
    SELECT STATUS INTO VSTATUS
    FROM ETL_LOG
    WHERE DATE_KEY = (SELECT A.DATE_KEY FROM DATE_DIM A WHERE A.DATE_VALUE = VDATE-1)
    AND LAYER = 'L2_RECURRING'
    AND SOURCE = 'mon';   
    
    SELECT STATUS INTO VSTATUS2
    FROM TEMP_TABLE_ALTER_LOG
    WHERE trunc(ALTER_DATE) = trunc(sysdate)
    AND TABLE_NAME = 'L1_RECURRING_TEMP'; 
    
    IF VSTATUS = 96 and VSTATUS2= 96 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L2_RECURRING',VDATE_KEY,'mon','30',VCOUNT,'','',SYSDATE);
        COMMIT;
        
        INSERT INTO L2_RECURRING
        SELECT /*+ PARALLEL(I,8) */
        C.DATE_KEY AS ETL_DATE_KEY,
        I.FILE_NAME,
        R4_SPLIT_CDR_REASON                  ,
        R9_STATUS                            ,
        R18_OBJ_TYPE                         ,
        R22_PRI_IDENTITY                     ,
        R24_SERVICE_CATEGORY                 ,
        R25_USAGE_SERVICE_TYPE               ,
        NVL(R41_DEBIT_AMOUNT,0) / 1000000 AS  R41_DEBIT_AMOUNT ,
        R373_MAINOFFERINGID           ,
        R374_PAYTYPE                         ,
        '880'||R375_CHARGINGPARTYNUMBER             ,
        F.DATE_KEY AS R377_CYCLEBEGINTIME_KEY   ,           
        TO_CHAR(TO_DATE( SUBSTR(R377_CYCLEBEGINTIME,9,4), 'HH24MI')+360/1440, 'HH24MI') AS  R377_CYCLEBEGINTIME_HOUR,--SUBSTR(R377_CYCLEBEGINTIME,9,4) AS  R377_CYCLEBEGINTIME_HOUR ,   
        R379_CYCLETYPE                       ,
        R384_PRODUCTID                       ,
        R385_OFFERINGID            ,
        R386_OFFERINGINSTID                  ,
        R387_ORDERSTATUS                     ,
        R392_TRIGGERMODE                     ,
        R394_PRODUCTCODE                     ,
        R395_MAINBALANCEINFO                 ,
        R402_TAXINFO                         ,
        NVL(R408_PREPAID_BALANCE,0) / 1000000 AS R408_PREPAID_BALANCE ,
        R419_CALLINGNETWORKTYPE              ,
        R420_LOCALAREA                       ,
        R421_BUNDLEPACKAGE       
        FROM  L1_RECURRING_TEMP_FULL I,DATE_DIM F,DATE_DIM C
        WHERE TO_CHAR(F.DATE_VALUE,'YYYYMMDD')=TO_CHAR(TO_DATE( SUBSTR(I.R377_CYCLEBEGINTIME,1,12), 'YYYYMMDDHH24MI')+6/24, 'YYYYMMDD')--WHERE TO_DATE(F.DATE_VALUE,'DD/MM/YYYY')=TO_DATE(TO_DATE( SUBSTR(I.R377_CYCLEBEGINTIME,1,8), 'YYYYMMDD'), 'DD/MM/YYYY')
        AND TRUNC(C.DATE_VALUE)=TRUNC(SYSDATE-1);
        COMMIT;
    UPDATE ETL_LOG SET STATUS = 96,
    UPDATE_TIME=SYSDATE 
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L2_RECURRING';        
        COMMIT;
    END IF;
  ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L2_RECURRING',VDATE_KEY,'mon','34',VCOUNT,'','',SYSDATE);
    COMMIT;
  END IF;
EXCEPTION
 WHEN OTHERS THEN NULL;
END;
/

