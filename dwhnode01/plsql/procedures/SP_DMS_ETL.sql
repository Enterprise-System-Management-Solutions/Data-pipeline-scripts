--
-- SP_DMS_ETL  (Procedure) 
--
CREATE OR REPLACE PROCEDURE DWH_USER.SP_DMS_ETL AS
VDATE_KEY               VARCHAR2(4);
VC_DEALER_INFO_DMS      NUMBER :=0;
VC_ITEM_MAP_DMS         NUMBER :=0;
VC_LIFTINGPOINT_DMS     NUMBER :=0;
VC_RETAILER_INFO_DMS    NUMBER :=0;
VC_SR_INFO_DMS          NUMBER :=0;
VC_SR_ITEMISSUEDTL_DMS  NUMBER :=0;
VC_TBS_RET_BALANCE_DMS  NUMBER :=0;
VC_TC_RET_BALANCE_DMS   NUMBER :=0;
------------------------
VS_DEALER_INFO_DMS      NUMBER :=0;
VS_ITEM_MAP_DMS         NUMBER :=0;
VS_LIFTINGPOINT_DMS     NUMBER :=0;
VS_RETAILER_INFO_DMS    NUMBER :=0;
VS_SR_INFO_DMS          NUMBER :=0;
VS_SR_ITEMISSUEDTL_DMS  NUMBER :=0;
VS_TBS_RET_BALANCE_DMS  NUMBER :=0;
VS_TC_RET_BALANCE_DMS   NUMBER :=0;

BEGIN
    SELECT DATE_KEY INTO VDATE_KEY 
    FROM DATE_DIM
    WHERE DATE_KEY = (SELECT DATE_KEY FROM DATE_DIM WHERE TRUNC(DATE_VALUE) =TRUNC(SYSDATE-1));
    
 -----------------S_BI_ACC_DM_DEALER_INFO_V--------------------

    SELECT COUNT(STATUS) INTO VS_DEALER_INFO_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_DEALER_INFO_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_DEALER_INFO_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_DEALER_INFO_V@DWH01TODMS
    WHERE  NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_DEALER_INFO_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_DEALER_INFO_DMS);

    IF VS_DEALER_INFO_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_DEALER_INFO_DMS',VDATE_KEY,'DMS','30',VC_DEALER_INFO_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_DEALER_INFO_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_DEALER_INFO_V@DWH01TODMS
        WHERE  NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_DEALER_INFO_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_DEALER_INFO_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_DEALER_INFO_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_DEALER_INFO_DMS',VDATE_KEY,'DMS','34',VC_DEALER_INFO_DMS,'','',SYSDATE);
        COMMIT;
    END IF;
    
--------------------------S_BI_ACC_DM_RETAILER_INFO_V-------------------------------
    SELECT COUNT(STATUS) INTO VS_ITEM_MAP_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_ITEM_MAP_DMS'
    AND SOURCE = 'DMS';
    
    SELECT COUNT(*) INTO VC_ITEM_MAP_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_ITEM_MAP_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_ITEM_MAP_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_ITEM_MAP_DMS);

    
    IF VS_ITEM_MAP_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_ITEM_MAP_DMS',VDATE_KEY,'DMS','30',VC_ITEM_MAP_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_ITEM_MAP_DMS
        SELECT * 
        FROM TTALK_DMS.S_BI_ACC_DM_ITEM_MAP_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_ITEM_MAP_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_ITEM_MAP_DMS);
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_ITEM_MAP_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_ITEM_MAP_DMS',VDATE_KEY,'DMS','34',VC_ITEM_MAP_DMS,'','',SYSDATE);
        COMMIT;
    END IF;
-----------------------S_BI_ACC_DM_LIFTINGPOINT_V---------------------------
    SELECT COUNT(STATUS) INTO VS_LIFTINGPOINT_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_LIFTINGPOINT_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_LIFTINGPOINT_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_LIFTINGPOINT_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_LIFTINGPOINT_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_LIFTINGPOINT_DMS);

    IF VS_LIFTINGPOINT_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_LIFTINGPOINT_DMS',VDATE_KEY,'DMS','30',VC_LIFTINGPOINT_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_LIFTINGPOINT_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_LIFTINGPOINT_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_LIFTINGPOINT_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_LIFTINGPOINT_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_LIFTINGPOINT_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_LIFTINGPOINT_DMS',VDATE_KEY,'DMS','34',VC_LIFTINGPOINT_DMS,'','',SYSDATE);
        COMMIT;
    END IF;
    
-----------------------S_BI_ACC_DM_RETAILER_INFO_V---------------------------
    SELECT COUNT(STATUS) INTO VS_RETAILER_INFO_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_RETAILER_INFO_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_RETAILER_INFO_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_RETAILER_INFO_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_RETAILER_INFO_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_RETAILER_INFO_DMS);

    IF VS_RETAILER_INFO_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_RETAILER_INFO_DMS',VDATE_KEY,'DMS','30',VC_RETAILER_INFO_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_RETAILER_INFO_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_RETAILER_INFO_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_RETAILER_INFO_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_RETAILER_INFO_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_RETAILER_INFO_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_RETAILER_INFO_DMS',VDATE_KEY,'DMS','34',VC_RETAILER_INFO_DMS,'','',SYSDATE);
        COMMIT;
    END IF;
-----------------------S_BI_ACC_DM_RETAILER_INFO_V---------------------------
    SELECT COUNT(STATUS) INTO VS_SR_INFO_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_SR_INFO_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_SR_INFO_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_SR_INFO_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_SR_INFO_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_SR_INFO_DMS);

    IF VS_SR_INFO_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_SR_INFO_DMS',VDATE_KEY,'DMS','30',VC_SR_INFO_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_SR_INFO_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_SR_INFO_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_SR_INFO_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_SR_INFO_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_SR_INFO_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_SR_INFO_DMS',VDATE_KEY,'DMS','34',VC_SR_INFO_DMS,'','',SYSDATE);
        COMMIT;
    END IF;

-----------------------S_BI_ACC_DM_SR_INFO_V---------------------------
    SELECT COUNT(STATUS) INTO VS_SR_INFO_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_SR_INFO_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_SR_INFO_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_SR_INFO_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_SR_INFO_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_SR_INFO_DMS);

    IF VS_SR_INFO_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_SR_INFO_DMS',VDATE_KEY,'DMS','30',VC_SR_INFO_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_SR_INFO_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_SR_INFO_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_SR_INFO_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_SR_INFO_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_SR_INFO_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_SR_INFO_DMS',VDATE_KEY,'DMS','34',VC_SR_INFO_DMS,'','',SYSDATE);
        COMMIT;
    END IF;

-----------------------S_BI_ACC_DM_SR_ITEMISSUEDTL_V---------------------------
    SELECT COUNT(STATUS) INTO VS_SR_ITEMISSUEDTL_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_SR_ITEMISSUEDTL_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_SR_ITEMISSUEDTL_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_SR_ITEMISSUEDTL_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_SR_ITEMISSUEDTL_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_SR_ITEMISSUEDTL_DMS);

    IF VS_SR_ITEMISSUEDTL_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_SR_ITEMISSUEDTL_DMS',VDATE_KEY,'DMS','30',VC_SR_ITEMISSUEDTL_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_SR_ITEMISSUEDTL_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_SR_ITEMISSUEDTL_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_SR_ITEMISSUEDTL_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_SR_ITEMISSUEDTL_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_SR_ITEMISSUEDTL_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_SR_ITEMISSUEDTL_DMS',VDATE_KEY,'DMS','34',VC_SR_ITEMISSUEDTL_DMS,'','',SYSDATE);
        COMMIT;
    END IF;

-----------------------S_BI_ACC_DM_TBS_RET_BALANCE_V---------------------------
    SELECT COUNT(STATUS) INTO VS_TBS_RET_BALANCE_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_TBS_RET_BALANCE_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_TBS_RET_BALANCE_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_TBS_RET_BALANCE_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_TBS_RET_BALANCE_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_TBS_RET_BALANCE_DMS);

    IF VS_TBS_RET_BALANCE_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_TBS_RET_BALANCE_DMS',VDATE_KEY,'DMS','30',VC_TBS_RET_BALANCE_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_TBS_RET_BALANCE_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_TBS_RET_BALANCE_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_TBS_RET_BALANCE_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_TBS_RET_BALANCE_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_TBS_RET_BALANCE_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_TBS_RET_BALANCE_DMS',VDATE_KEY,'DMS','34',VC_TBS_RET_BALANCE_DMS,'','',SYSDATE);
        COMMIT;
    END IF;

-----------------------S_BI_ACC_DM_TC_RET_BALANCE_V---------------------------
    SELECT COUNT(STATUS) INTO VS_TC_RET_BALANCE_DMS
    FROM ETL_LOG
    WHERE DATE_KEY = VDATE_KEY
    AND LAYER = 'L1_TC_RET_BALANCE_DMS'
    AND SOURCE = 'DMS';


    SELECT COUNT(*) INTO VC_TC_RET_BALANCE_DMS
    FROM TTALK_DMS.S_BI_ACC_DM_TC_RET_BALANCE_V@DWH01TODMS
    WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_TC_RET_BALANCE_DMS)
    OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_TC_RET_BALANCE_DMS);

    IF VS_TC_RET_BALANCE_DMS = 0 THEN
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_TC_RET_BALANCE_DMS',VDATE_KEY,'DMS','30',VC_TC_RET_BALANCE_DMS,'','',SYSDATE);
        COMMIT;

        INSERT INTO L1_TC_RET_BALANCE_DMS
        SELECT *
        FROM TTALK_DMS.S_BI_ACC_DM_TC_RET_BALANCE_V@DWH01TODMS
        WHERE NVL(SS_MODIFIED_ON,0) NOT IN (SELECT NVL(SS_MODIFIED_ON,0) FROM L1_TC_RET_BALANCE_DMS)
        OR NVL(SS_CREATED_ON,0) NOT IN (SELECT NVL(SS_CREATED_ON,0) FROM L1_TC_RET_BALANCE_DMS);
        COMMIT;
        
        UPDATE ETL_LOG SET STATUS = 96,
        UPDATE_TIME=SYSDATE
        WHERE DATE_KEY = VDATE_KEY
        AND LAYER = 'L1_TC_RET_BALANCE_DMS';        
        COMMIT;
    ELSE
        INSERT INTO ETL_LOG (LAYER, DATE_KEY, SOURCE, STATUS, FILE_COUNT, PER_COUNT, POST_COUNT, INSERT_TIME)
        VALUES              ('L1_TC_RET_BALANCE_DMS',VDATE_KEY,'DMS','34',VC_TC_RET_BALANCE_DMS,'','',SYSDATE);
        COMMIT;
    END IF;
END;
/

